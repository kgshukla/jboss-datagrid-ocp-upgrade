apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: datagrid72-extended
message: A new data grid service has been created in your project. It supports connector
  type(s) "${INFINISPAN_CONNECTORS}".
metadata:
  annotations:
    description: An example Red Hat JBoss Data Grid application. For more information
      about using this template, see https://github.com/jboss-openshift/application-templates.
    iconClass: icon-datagrid
    openshift.io/display-name: Red Hat JBoss Data Grid 7.2 (Ephemeral, no https)
    openshift.io/provider-display-name: Red Hat, Inc.
    tags: datagrid,jboss
    template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-jboss-data-grid/
    template.openshift.io/long-description: This template defines resources needed
      to develop Red Hat JBoss Data Grid 7.2 based applications, including a deployment
      configuration, using ephemeral (temporary) storage and communication using http.
    template.openshift.io/support-url: https://access.redhat.com
    version: "1.3"
  creationTimestamp: null
  name: datagrid72-extended
  selfLink: /apis/template.openshift.io/v1/namespaces/openshift/templates/datagrid72-extended
objects:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The web server's HTTP port.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
    - port: 8080
      targetPort: 8080
    selector:
      deploymentConfig: ${APPLICATION_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Memcached service for clustered applications.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-memcached
  spec:
    ports:
    - port: 11211
      targetPort: 11211
    selector:
      deploymentConfig: ${APPLICATION_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Hot Rod service for clustered applications.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-hotrod
  spec:
    ports:
    - port: 11333
      targetPort: 11333
    selector:
      deploymentConfig: ${APPLICATION_NAME}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: The JGroups ping port for clustering.
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}-ping
  spec:
    clusterIP: None
    ports:
    - name: ping
      port: 8888
    selector:
      deploymentConfig: ${APPLICATION_NAME}
- apiVersion: v1
  id: ${APPLICATION_NAME}-http
  kind: Route
  metadata:
    annotations:
      description: Route for application's HTTP service.
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    host: ${HOSTNAME_HTTP}
    to:
      name: ${APPLICATION_NAME}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      application: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    minReadySeconds: 60
    replicas: 2
    selector:
      deploymentConfig: ${APPLICATION_NAME}
    strategy:
      type: Rolling
    minReadySeconds: 60
    template:
      metadata:
        labels:
          application: ${APPLICATION_NAME}
          deploymentConfig: ${APPLICATION_NAME}
        name: ${APPLICATION_NAME}
      spec:
        containers:
        - env:
          - name: USERNAME
            value: ${USERNAME}
          - name: PASSWORD
            value: ${PASSWORD}
          - name: ADMIN_GROUP
            value: ${ADMIN_GROUP}
          - name: HOTROD_AUTHENTICATION
            value: ${HOTROD_AUTHENTICATION}
          - name: CONTAINER_SECURITY_ROLE_MAPPER
            value: ${CONTAINER_SECURITY_ROLE_MAPPER}
          - name: CONTAINER_SECURITY_ROLES
            value: ${CONTAINER_SECURITY_ROLES}
          - name: JGROUPS_PING_PROTOCOL
            value: openshift.DNS_PING
          - name: OPENSHIFT_DNS_PING_SERVICE_NAME
            value: ${APPLICATION_NAME}-ping
          - name: OPENSHIFT_DNS_PING_SERVICE_PORT
            value: "8888"
          - name: INFINISPAN_CONNECTORS
            value: ${INFINISPAN_CONNECTORS}
          - name: CACHE_NAMES
            value: ${CACHE_NAMES}
          - name: DATAVIRT_CACHE_NAMES
            value: ${DATAVIRT_CACHE_NAMES}
          - name: CACHE_TYPE_DEFAULT
            value: ${CACHE_TYPE_DEFAULT}
          - name: HOTROD_SERVICE_NAME
            value: ${APPLICATION_NAME}-hotrod
          - name: MEMCACHED_CACHE
            value: ${MEMCACHED_CACHE}
          - name: REST_SECURITY_DOMAIN
            value: ${REST_SECURITY_DOMAIN}
          - name: JGROUPS_CLUSTER_PASSWORD
            value: ${JGROUPS_CLUSTER_PASSWORD}
          - name: USER_CONFIG_MAP
            value: "TRUE"
          image: datagrid72-openshift
          imagePullPolicy: Always
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/datagrid/bin/livenessProbe.sh
            initialDelaySeconds: 60
          name: ${APPLICATION_NAME}
          ports:
          - containerPort: 8778
            name: jolokia
            protocol: TCP
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8888
            name: ping
            protocol: TCP
          - containerPort: 11211
            name: memcached
            protocol: TCP
          - containerPort: 11222
            name: hotrod-internal
            protocol: TCP
          - containerPort: 11333
            name: hotrod
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/datagrid/bin/readinessProbe.sh
          resources:
            limits:
              memory: ${MEMORY_LIMIT}
          volumeMounts:
          - mountPath: /opt/datagrid/standalone/configuration/user
            name: config-volume
            readOnly: true
        terminationGracePeriodSeconds: 60
        volumes:
        - configMap:
            name: datagrid-config
          name: config-volume
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${APPLICATION_NAME}
        from:
          kind: ImageStreamTag
          name: datagrid72-openshift:1.3
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: ImageChange
    - type: ConfigChange
parameters:
- description: The name for the application.
  displayName: Application Name
  name: APPLICATION_NAME
  required: true
  value: datagrid-new
- description: 'Custom hostname for http service route.  Leave blank for default hostname,
    e.g.: <application-name>-<project>.<default-domain-suffix>'
  displayName: Custom http Route Hostname
  name: HOSTNAME_HTTP
- description: User name for JDG user.
  displayName: Username
  name: USERNAME
- description: The password to access the JDG Caches. Must be different than username;
    must not be root, admin, or administrator; must contain at least 8 characters,
    1 alphabetic character(s), 1 digit(s), and 1 non-alphanumeric symbol(s). (optional)
  displayName: Password
  name: PASSWORD
- description: Comma delimited list of roles/groups associated with the JDG user
  displayName: JDG User Roles/Groups
  name: ADMIN_GROUP
- description: Enable Hotrod Authentication
  displayName: Hotrod Authentication
  name: HOTROD_AUTHENTICATION
- description: Defines which role mapper to use for cache authentication
  displayName: Container Security Role Mapper
  name: CONTAINER_SECURITY_ROLE_MAPPER
- description: Comma delimited list of role names and assigned permissions
  displayName: Container Security Roles
  name: CONTAINER_SECURITY_ROLES
- description: Namespace in which the ImageStreams for Red Hat Middleware images are
    installed. These ImageStreams are normally installed in the openshift namespace.
    You should only need to modify this if you've installed the ImageStreams in a
    different namespace/project.
  displayName: ImageStream Namespace
  name: IMAGE_STREAM_NAMESPACE
  required: true
  value: openshift
- description: Comma-separated list of connector types that should be configured (defaults
    to 'memcached,hotrod,rest')
  displayName: Infinispan Connectors
  name: INFINISPAN_CONNECTORS
  value: hotrod,memcached,rest
- description: Comma-separated list of caches to configure.  By default, a distributed-cache,
    with a mode of SYNC will be configured for each entry.
  displayName: Cache Names
  name: CACHE_NAMES
  value: cachetest
- description: 'Comma-separated list of caches to configure for use by Red Hat JBoss
    Data Virtualization for materialization of views.  Three caches will be created
    for each named cache: <name>, <name>_staging and <name>_alias.'
  displayName: Datavirt Cache Names
  name: DATAVIRT_CACHE_NAMES
- description: Default cache type for all caches. If empty then distributed will be
    the default
  displayName: Default Cache Type
  name: CACHE_TYPE_DEFAULT
- description: The name of the cache to expose through this memcached connector
  displayName: Memcached Cache Name
  name: MEMCACHED_CACHE
  value: default_memcached
- description: The domain, declared in the security subsystem, that should be used
    to authenticate access to the REST endpoint
  displayName: REST Security Domain
  name: REST_SECURITY_DOMAIN
- description: JGroups cluster password
  displayName: JGroups Cluster Password
  from: '[a-zA-Z0-9]{8}'
  generate: expression
  name: JGROUPS_CLUSTER_PASSWORD
  required: true
- description: Container memory limit
  name: MEMORY_LIMIT
  value: 1Gi
